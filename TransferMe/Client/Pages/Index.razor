@page "/"
@using System
@using System.IO
@using Microsoft.AspNetCore
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Logging
@using System.Linq
@using System.Net.Http.Headers
@using System.Text.Json
@using BlazorInputFile
@using TransferMe.Client.Code
@inject ISnackbar Snackbar

    <style>
        .drag-drop-zone {
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all .4s;
            min-height: 400px;
        }

        .drag-drop-input {
            position: absolute;
            width: 100%;
            height: 90%;
            opacity: 0;
            cursor: pointer;
            z-index: 2;
        }

        .drag-enter {
            box-shadow: var(--mud-elevation-10);
        }

        .list {
            padding: 2em;
            min-width: 100%;
        }
    </style>

<MudThemeProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Transfer.Me</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudMainContent>
                <MudPaper @ondragenter="@(()=>_dragEnterStyle="drag-enter")"
                          @ondragleave="@(()=>_dragEnterStyle=null)"
                          @ondragend="@(()=>_dragEnterStyle=null)"
                          Class=@("drag-drop-zone "+ _dragEnterStyle)>

                    <InputFile OnChange="HandleFileSelected" multiple class="drag-drop-input" />

                    @if (fileNames.Count() == 0)
                    {
                        <MudText Typo="Typo.h3">Drag and drop files here or click</MudText>
                    }
                    else
                    {
                        <MudList Style="padding:2em;width:100%;" Dense="true">
                            @foreach (var file in fileNames)
                            {
                                <MudListItem @key="@file">
                                    <MudChip Color="Color.Dark"
                                             Style="width:60px; overflow:hidden;"
                                             Text="@(file.Split(".").Last())" />
                                    @file
                                </MudListItem>}
                        </MudList>
                    }
                </MudPaper>

                <MudGrid Justify="Justify.Center" Spacing="4">
                    <MudItem>
                        <MudButton OnClick="Upload" Disabled="@(!fileNames.Any())" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
                    </MudItem>
                    <MudItem>
                        <MudButton OnClick="@fileNames.Clear" Disabled="@(!fileNames.Any())" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
                    </MudItem>
                </MudGrid>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}


@*@code
{
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        var entries = e.GetMultipleFiles();
        //Do your validations here
 

        //TODO upload the files to the server
    }
}*@


@code {
    Drawer drawer;
    string _dragEnterStyle;
    IList<string> fileNames = new List<string>();
    int numLines;
    IFileListEntry file;

    void HandleFileSelected(IFileListEntry[] files)
    {
        fileNames = files.Select(f => f.Name).ToList();
    }

    //Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
    //Snackbar.Add($"Files with {entries.FirstOrDefault().Size} bytes size are not allowed", Severity.Error);
    //Snackbar.Add($"Files starting with letter {entries.FirstOrDefault().Name.Substring(0, 1)} are not recommended", Severity.Warning);
    //Snackbar.Add($"This file has the extension {entries.FirstOrDefault().Name.Split(".").Last()}", Severity.Info);


    void Upload()
    {
        //Upload the files here
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("TODO: Upload your files!", Severity.Normal);
    }
}